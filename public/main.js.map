{"version":3,"sources":["./src/environments/environment.ts","./src/app/components/home/home.component.ts","./src/app/components/home/home.component.html","./src/app/components/profile/profile.component.ts","./src/app/components/profile/profile.component.html","./src/app/components/dashboard/dashboard.component.ts","./src/app/components/dashboard/dashboard.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/components/login/login.component.ts","./src/app/components/login/login.component.html","./src/app/components/register/register.component.ts","./src/app/components/register/register.component.html","./src/app/app.module.ts","./src/app/services/validate.service.ts","./src/app/components/navbar/navbar.component.ts","./src/app/components/navbar/navbar.component.html","./src/app/components/components.module.ts","./src/app/services/auth.service.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACfnE;AAAA;AAAA;AAAkD;;AAO3C,MAAM,aAAa;IAExB,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;;0EALU,aAAa;6FAAb,aAAa;QCP1B,yEACI;QAAA,wEAAiB;QAAA,oEAAG;QAAA,kFAAuB;QAAA,4DAAI;QAAA,4DAAK;QACpD,uEAAgB;QAAA,8IAAmF;QAAA,4DAAI;QACvG,sEACI;QAAA,uEAAqE;QAAA,uEAAY;QAAA,4DAAI;QACrF,uEAAwC;QAAA,iEAAK;QAAA,4DAAI;QAErD,4DAAM;QACV,4DAAM;QAEN,0EACI;QAAA,0EACE;QAAA,sEAAI;QAAA,gFAAoB;QAAA,4DAAK;QAC7B,qEAAG;QAAA,wJAA4F;QAAA,4DAAI;QACrG,4DAAM;QACN,0EACE;QAAA,sEAAI;QAAA,uEAAW;QAAA,4DAAK;QACpB,qEAAG;QAAA,wJAA4F;QAAA,4DAAI;QACrG,4DAAM;QACN,0EACE;QAAA,sEAAI;QAAA,sEAAU;QAAA,4DAAK;QACnB,qEAAG;QAAA,yIAA6E;QAAA,4DAAI;QACtF,4DAAM;QACR,4DAAM;;6FDhBK,aAAa;cALzB,uDAAS;eAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,WAAW,EAAE,uBAAuB;gBACpC,SAAS,EAAE,CAAC,sBAAsB,CAAC;aACpC;;;;;;;;;;;;;;AEND;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AAElD,iEAAiE;AACV;;;;;ICFvD,sEACI;IAAA,wEAAwB;IAAA,uDAAa;IAAA,4DAAK;IAC1C,wEACE;IAAA,wEAA4B;IAAA,uDAA4B;IAAA,4DAAK;IAC7D,wEAA4B;IAAA,uDAAsB;IAAA,4DAAK;IACzD,4DAAK;IACP,4DAAM;;;IALoB,0DAAa;IAAb,iFAAa;IAEP,0DAA4B;IAA5B,yGAA4B;IAC5B,0DAAsB;IAAtB,mGAAsB;;ADKjD,MAAM,gBAAgB;IAI3B,YAEU,WAAwB,EACxB,MAAc;QADd,gBAAW,GAAX,WAAW,CAAa;QACxB,WAAM,GAAN,MAAM,CAAQ;IACpB,CAAC;IAEL,QAAQ;QAEN,IAAI,CAAC,WAAW,CAAC,UAAU,EAAE,CAAC,SAAS,CAAC,OAAO,CAAC,EAAE;YAChD,IAAI,CAAC,IAAI,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC;QAC9B,CAAC,EACA,GAAG,CAAC,EAAE;YACJ,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YACjB,OAAO,KAAK,CAAC;QACf,CAAC,CAAC,CAAC;IACN,CAAC;;gFAnBU,gBAAgB,kEAPrB,8DAAW;gGAON,gBAAgB;QCT7B,4GAMQ;;QANF,0EAAU;;6FDSH,gBAAgB;cAL5B,uDAAS;eAAC;gBACT,QAAQ,EAAE,aAAa;gBACvB,WAAW,EAAE,0BAA0B;gBACvC,SAAS,EAAE,CAAC,yBAAyB,CAAC;aACvC;sCANO,8DAAW;;;;;;;;;;;;;AEHnB;AAAA;AAAA;AAAkD;;AAO3C,MAAM,kBAAkB;IAE7B,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;;oFALU,kBAAkB;kGAAlB,kBAAkB;QCN/B,wEAAwB;QAAA,oEAAS;QAAA,4DAAK;QACtC,oEAAG;QAAA,oFAAyB;QAAA,4DAAI;;6FDKnB,kBAAkB;cAL9B,uDAAS;eAAC;gBACT,QAAQ,EAAE,eAAe;gBACzB,WAAW,EAAE,4BAA4B;gBACzC,SAAS,EAAE,CAAC,2BAA2B,CAAC;aACzC;;;;;;;;;;;;;;AEND;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0C;;;;;AAOnC,MAAM,YAAY;IALzB;QAME,UAAK,GAAG,UAAU,CAAC;KACpB;;wEAFY,YAAY;4FAAZ,YAAY;QCPzB,wEAAyB;QACzB,yEACI;QAAA,4EAAiC;QACjC,2EAA+B;QACnC,4DAAM;;6FDGO,YAAY;cALxB,uDAAS;eAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,WAAW,EAAE,sBAAsB;gBACnC,SAAS,EAAE,CAAC,qBAAqB,CAAC;aACnC;;;;;;;;;;;;;;AEND;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AAGK;;;;;AAOhD,MAAM,cAAc;IAKzB,YAEU,YAAkC,EAClC,WAAwB,EACxB,MAAc;QAFd,iBAAY,GAAZ,YAAY,CAAsB;QAClC,gBAAW,GAAX,WAAW,CAAa;QACxB,WAAM,GAAN,MAAM,CAAQ;IAGpB,CAAC;IAEL,QAAQ,KAAU,CAAC;IAEnB,aAAa;QAEX,MAAM,IAAI,GAAG;YACX,QAAQ,EAAE,IAAI,CAAC,QAAQ;YACvB,QAAQ,EAAE,IAAI,CAAC,QAAQ;SACxB;QACD,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QAClB,IAAI,CAAC,WAAW,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;YACvD,IAAG,IAAI,CAAC,SAAS,CAAC,EAAE;gBACnB,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;gBAC3D,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,uBAAuB,EAAE,EAAC,QAAQ,EAAE,eAAe,EAAE,OAAO,EAAE,IAAI,EAAC,CAAC,CAAC;gBAC5F,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC;aACrC;iBAAM;gBACL,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,EAAC,QAAQ,EAAE,cAAc,EAAE,OAAO,EAAE,IAAI,EAAC,CAAC,CAAC;gBAC/E,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;aACjC;QACL,CAAC,CAAC,CAAC;IAEH,CAAC;;4EAlCU,cAAc,iNAPnB,8DAAW;8FAON,cAAc;QCV3B,wEAAyB;QAAA,gEAAK;QAAA,4DAAK;QACnC,0EACQ;QADkB,sIAAU,mBAAe,IAAC;QAC5C,yEACE;QAAA,2EAAsB;QAAA,mEAAQ;QAAA,4DAAQ;QACtC,2EACF;QADuE,oLAAsB;QAA3F,4DACF;QAAA,4DAAM;QACN,yEACA;QAAA,2EAAsB;QAAA,mEAAQ;QAAA,4DAAQ;QACtC,4EACA;QAD0E,qLAAsB;QAAhG,4DACA;QAAA,4DAAM;QACN,0EACE;QAAA,yEACE;QAAA,uEAA4C;QAAA,yEAC9C;QAAA,4DAAQ;QACV,4DAAM;QACN,uEACR;QAAA,4DAAO;;QAZwE,0DAAsB;QAAtB,iFAAsB;QAInB,0DAAsB;QAAtB,iFAAsB;;6FDE3F,cAAc;cAL1B,uDAAS;eAAC;gBACT,QAAQ,EAAE,WAAW;gBACrB,WAAW,EAAE,wBAAwB;gBACrC,SAAS,EAAE,CAAC,uBAAuB,CAAC;aACrC;8HANO,8DAAW;;;;;;;;;;;;;AEHnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AAIK;;;;;;AAQhD,MAAM,iBAAiB;IAQ5B,YAEU,eAAiC,EACjC,YAAkC,EAClC,WAAwB,EACxB,MAAc;QAHd,oBAAe,GAAf,eAAe,CAAkB;QACjC,iBAAY,GAAZ,YAAY,CAAsB;QAClC,gBAAW,GAAX,WAAW,CAAa;QACxB,WAAM,GAAN,MAAM,CAAQ;IAIpB,CAAC;IAEL,QAAQ;IACR,CAAC;IAED,gBAAgB;QAEd,MAAM,IAAI,GAAG;YACX,IAAI,EAAE,IAAI,CAAC,IAAI;YACf,KAAK,EAAE,IAAI,CAAC,KAAK;YACjB,QAAQ,EAAE,IAAI,CAAC,QAAQ;YACvB,QAAQ,EAAE,IAAI,CAAC,QAAQ;SACxB;QAEJ,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;QAEvB,mBAAmB;QAEf,IAAG,CAAC,IAAI,CAAC,eAAe,CAAC,gBAAgB,CAAC,IAAI,CAAC,EAAE;YAChD,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,2BAA2B,EAAE,EAAC,QAAQ,EAAE,cAAc,EAAE,OAAO,EAAE,IAAI,EAAC,CAAC,CAAC;YAC/F,OAAO,KAAK,CAAC;SACd;QAGJ,kBAAkB;QAElB,IAAG,CAAC,IAAI,CAAC,eAAe,CAAC,aAAa,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE;YACnD,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,0BAA0B,EAAE,EAAC,QAAQ,EAAE,cAAc,EAAE,OAAO,EAAE,IAAI,EAAC,CAAC,CAAC;YAC9F,OAAO,KAAK,CAAC;SACd;QAED,gBAAgB;QAChB,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;YACnD,IAAG,IAAI,CAAC,SAAS,CAAC,EAAE;gBAClB,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,+CAA+C,EAAE,EAAC,QAAQ,EAAE,eAAe,EAAE,OAAO,EAAE,IAAI,EAAC,CAAC,CAAC;gBACpH,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;aAClC;iBAAM;gBACL,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,sBAAsB,EAAE,EAAC,QAAQ,EAAE,cAAc,EAAE,OAAO,EAAE,IAAI,EAAC,CAAC,CAAC;gBAC1F,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC;aAGrC;QACH,CAAC,CAAC,CAAC;IAED,CAAC;;kFA7DU,iBAAiB,8VARtB,8DAAW;iGAQN,iBAAiB;QCZ9B,sEACI;QAAA,wEAAwB;QAAA,oEAAG;QAAA,uEAAY;QAAA,4DAAI;QAAA,4DAAK;QAChD,0EACE;QADK,yIAAU,sBAAkB,IAAC;QAClC,yEACE;QAAA,2EAAkB;QAAA,+DAAI;QAAA,4DAAQ;QAC9B,2EACF;QADqB,mLAAkB;QAArC,4DACF;QAAA,4DAAM;QACN,yEACE;QAAA,4EAAsB;QAAA,oEAAQ;QAAA,4DAAQ;QACtC,4EACF;QADqB,wLAAsB;QAAzC,4DACF;QAAA,4DAAM;QACN,0EACE;QAAA,4EAAmB;QAAA,iEAAK;QAAA,4DAAQ;QAChC,4EACA;QADoB,qLAAmB;QAAvC,4DACA;QAAA,4EAAmD;QAAA,0GAA8C;QAAA,4DAAQ;QAC3G,4DAAM;QACN,0EACE;QAAA,6EAAsB;QAAA,oEAAQ;QAAA,4DAAQ;QACtC,6EACF;QADyB,wLAAsB;QAA7C,4DACF;QAAA,4DAAM;QACN,wEACF;QAAA,4DAAO;QACP,4DAAM;;QAjBiB,0DAAkB;QAAlB,6EAAkB;QAIlB,0DAAsB;QAAtB,iFAAsB;QAIrB,0DAAmB;QAAnB,8EAAmB;QAKhB,0DAAsB;QAAtB,iFAAsB;;6FDNxC,iBAAiB;cAL7B,uDAAS;eAAC;gBACT,QAAQ,EAAE,cAAc;gBACxB,WAAW,EAAE,2BAA2B;gBACxC,SAAS,EAAE,CAAC,0BAA0B,CAAC;aACxC;oNAPO,8DAAW;;;;;;;;;;;;;AEJnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;AACjB;AACe;AACT;AACkB;AACC;AACJ;AACP;;;AACvD,oDAAoD;AAwB7C,MAAM,SAAS;;wFAAT,SAAS,cAFR,2DAAY;4IAEb,SAAS,mBAHT,EAAE,YAbJ;YACP,uEAAa;YACb,oEAAgB;YAChB,8EAAgB;YAChB,0DAAW;YACX,kEAAmB;YACnB,2EAAmB,CAAC,OAAO,EAAE;YAC7B,qEAAgB;SAIjB;mIAKU,SAAS,mBApBlB,2DAAY,aAKZ,uEAAa;QACb,oEAAgB;QAChB,8EAAgB;QAChB,0DAAW;QACX,kEAAmB,+EAEnB,qEAAgB;6FASP,SAAS;cAtBrB,sDAAQ;eAAC;gBACR,YAAY,EAAE;oBACZ,2DAAY;iBAGb;gBACD,OAAO,EAAE;oBACP,uEAAa;oBACb,oEAAgB;oBAChB,8EAAgB;oBAChB,0DAAW;oBACX,kEAAmB;oBACnB,2EAAmB,CAAC,OAAO,EAAE;oBAC7B,qEAAgB;iBAIjB;gBAED,SAAS,EAAE,EAAE;gBACb,SAAS,EAAE,CAAC,2DAAY,CAAC;aAC1B;;;;;;;;;;;;;;AC/BD;AAAA;AAAA;AAA2C;;AAKpC,MAAM,eAAe;IAE1B,gBAAgB,CAAC;IACjB,gBAAgB,CAAC,IAAI;QACnB,IAAG,IAAI,CAAC,IAAI,IAAI,SAAS,IAAI,IAAI,CAAC,KAAK,IAAI,SAAS,IAAI,IAAI,CAAC,QAAQ,IAAI,SAAS,IAAI,IAAI,CAAC,QAAQ,IAAI,SAAS,EAAE;YAC9G,OAAO,KAAK,CAAC;SAChB;aAAM;YACL,OAAO,IAAI,CAAC;SACb;IACH,CAAC;IAED,aAAa,CAAC,KAAK;QACjB,MAAM,EAAE,GAAG,yJAAyJ,CAAC;QACrK,OAAO,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IACxB,CAAC;;8EAdU,eAAe;kGAAf,eAAe,WAAf,eAAe,mBAFd,MAAM;6FAEP,eAAe;cAH3B,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACJD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AAGK;;;;AAOhD,MAAM,eAAe;IAE1B,YAEU,YAAkC,EAClC,WAAwB,EACxB,MAAc;QAFd,iBAAY,GAAZ,YAAY,CAAsB;QAClC,gBAAW,GAAX,WAAW,CAAa;QACxB,WAAM,GAAN,MAAM,CAAQ;IACpB,CAAC;IAEL,QAAQ;IACR,CAAC;IAED,aAAa;QACX,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC;QAC1B,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,oBAAoB,EAAE;YAC3C,QAAQ,EAAE,eAAe,EAAE,OAAO,EAAE,IAAI;SACzC,CAAC,CAAC;QACH,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;QACjC,OAAO,KAAK,CAAC;IAEf,CAAC;;8EApBU,eAAe,iNAPpB,8DAAW;+FAON,eAAe;QCV5B,yEACI;QAAA,yEAEE;QAAA,4EACE;QAAA,qEAAyC;QACzC,qEAA8B;QAC9B,qEAA8B;QAEhC,4DAAS;QACT,yEAEE;QAAA,wEACE;QAAA,wEACE;QAAA,uEAA6B;QAAA,8EAAkB;QAAA,4DAAI;QACrD,4DAAK;QACP,4DAAK;QACL,yEACI;QAAA,0EACE;QAAA,wEAA6B;QAAA,iEAAK;QAAA,mEAAa;QAAA,4DAAI;QACrD,4DAAK;QACP,4DAAK;QACP,0EAEE;QAAA,0EACE;QAAA,yEAAwC;QAAA,iEAAK;QAAA,4DAAI;QACnD,4DAAK;QACL,0EACE;QAAA,yEAAqC;QAAA,oEAAQ;QAAA,4DAAI;QACnD,4DAAK;QACL,0EACE;QAAA,yEAAyD;QAAnC,mIAAS,mBAAe,IAAC;QAAU,kEAAM;QAAA,4DAAI;QACrE,4DAAK;QACL,0EACE;QAAA,yEAAqC;QAAA,mEAAO;QAAA,4DAAI;QAClD,4DAAK;QAGT,4DAAK;QAEL,4DAAM;QACR,4DAAM;QACR,4DAAM;;6FD/BK,eAAe;cAL3B,uDAAS;eAAC;gBACT,QAAQ,EAAE,YAAY;gBACtB,WAAW,EAAE,yBAAyB;gBACtC,SAAS,EAAE,CAAC,wBAAwB,CAAC;aACtC;8HANO,8DAAW;;;;;;;;;;;;;AEHnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AACM;AACmB;AACT;AACH;AACM;AACG;AACM;AACH;AACJ;AACV;;AAoB7C,MAAM,gBAAgB;;+FAAhB,gBAAgB;0JAAhB,gBAAgB,mBAFjB,CAAC,0EAAe,EAAE,+DAAW,CAAC,YAZ/B;YACP,4DAAY;YACZ,0DAAW;SACZ,EAOC,kEAAmB;mIAIV,gBAAgB,mBAfZ,8EAAiB,EAAE,qEAAc,EAAE,kEAAa,EAAE,wEAAe,EAAE,2EAAgB,EAAE,iFAAkB,aAEpH,4DAAY;QACZ,0DAAW,aAGX,8EAAiB;QACjB,qEAAc;QACb,kEAAa;QACd,wEAAe;QACf,2EAAgB;QAChB,kEAAmB;6FAIV,gBAAgB;cAhB5B,sDAAQ;eAAC;gBACR,YAAY,EAAE,CAAC,8EAAiB,EAAE,qEAAc,EAAE,kEAAa,EAAE,wEAAe,EAAE,2EAAgB,EAAE,iFAAkB,CAAC;gBACvH,OAAO,EAAE;oBACP,4DAAY;oBACZ,0DAAW;iBACZ;gBACD,OAAO,EAAC;oBACN,8EAAiB;oBACjB,qEAAc;oBACb,kEAAa;oBACd,wEAAe;oBACf,2EAAgB;oBAChB,kEAAmB;iBACpB;gBACD,SAAS,EAAC,CAAC,0EAAe,EAAE,+DAAW,CAAC;aACzC;;;;;;;;;;;;;;AC7BD;AAAA;AAAA;AAAA;AAA2C;AACgC;;;AAE3E,kDAAkD;AASnC,MAAM,WAAW;IAM9B,YAAoB,UAAsB;QAAtB,eAAU,GAAV,UAAU,CAAY;IAAI,CAAC;IAG/C,YAAY,CAAC,IAAI;QACf,IAAI,OAAO,GAAG,IAAI,gEAAW,EAAE,CAAC;QAChC,OAAO,CAAC,MAAM,CAAC,cAAc,EAAE,kBAAkB,CAAC,CAAC;QACnD,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,sCAAsC,EAAE,IAAI,EAAE,EAAC,OAAO,EAAE,OAAO,EAAC,CAAC;IAG/F,CAAC;IAED,gBAAgB,CAAC,IAAI;QACnB,IAAI,OAAO,GAAG,IAAI,gEAAW,EAAE,CAAC;QAChC,OAAO,CAAC,MAAM,CAAC,cAAc,EAAE,kBAAkB,CAAC,CAAC;QACnD,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,0CAA0C,EAAE,IAAI,EAAE,EAAC,OAAO,EAAE,OAAO,EAAC,CAAC;IAEnG,CAAC;IAGD,aAAa,CAAC,KAAK,EAAE,IAAI;QACvB,YAAY,CAAC,OAAO,CAAC,UAAU,EAAE,KAAK,CAAC,CAAC;QACxC,YAAY,CAAC,OAAO,CAAC,MAAM,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC;QACnD,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACvB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;IACnB,CAAC;IAED,MAAM;QACJ,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,YAAY,CAAC,KAAK,EAAE,CAAC;IACvB,CAAC;IAED,UAAU;QACR,IAAI,OAAO,GAAG,IAAI,gEAAW,EAAE,CAAC;QAChC,IAAI,CAAC,SAAS,EAAE,CAAC;QACjB,OAAO,CAAC,MAAM,CAAC,eAAe,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;QAChD,OAAO,CAAC,MAAM,CAAC,cAAc,EAAE,kBAAkB,CAAC,CAAC;QACnD,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,qCAAqC,EAAE,EAAC,OAAO,EAAE,OAAO,EAAC,CAAC;IAEvF,CAAC;IAED,SAAS;QACP,MAAM,KAAK,GAAG,YAAY,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;QAC/C,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;IACzB,CAAC;IAED,QAAQ;QACP,sCAAsC;IACvC,CAAC;;sEAtDkB,WAAW;8FAAX,WAAW,WAAX,WAAW,mBAFlB,MAAM;6FAEC,WAAW;cAH/B,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACXD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AACc;AACsB;AACT;AACH;AACe;AACN;;;AAE1E,MAAM,MAAM,GAAW;IAGrB,EAAC,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,6EAAa,EAAC;IACpC,EAAC,IAAI,EAAE,UAAU,EAAE,SAAS,EAAE,yFAAiB,EAAC;IAChD,EAAC,IAAI,EAAE,OAAO,EAAE,SAAS,EAAE,gFAAc,EAAC;IAC1C,EAAC,IAAI,EAAE,WAAW,EAAE,SAAS,EAAE,4FAAkB,EAAC;IAClD,EAAC,IAAI,EAAE,SAAS,EAAE,SAAS,EAAE,sFAAgB,EAAC;CAK/C,CAAC;AAMK,MAAM,gBAAgB;;+FAAhB,gBAAgB;0JAAhB,gBAAgB,kBAHlB,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,EAC7B,4DAAY;mIAEX,gBAAgB,uFAFjB,4DAAY;6FAEX,gBAAgB;cAJ5B,sDAAQ;eAAC;gBACR,OAAO,EAAE,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;gBACvC,OAAO,EAAE,CAAC,4DAAY,CAAC;aACxB;;;;;;;;;;;;;;ACzBD;AAAA;AAAA;AAAA;AAAA;AAA+C;AAIU;;;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,2EAAwB,gBAAgB,CAAC,0DAAU;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;;;;;;;;;;;;ACXpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,qC","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"jumbotron text-center\">\n    <h1 class=\"mean\"><i>MEAN Authentication App</i></h1>\n    <p class=\"lead\">Welcome to our mean stack authentication app build from step by step for beginners.</p>\n    <div>\n        <a class=\"btn btn-primary\" href=\"register\" style='margin-right:16px'>Registration</a>\n        <a class=\"btn btn-success\" href=\"login\">Login</a>\n\n    </div>\n</div>\n\n<div class=\"row\">\n    <div class=\"col-md-4\">\n      <h3>Express/Node Backend</h3>\n      <p>A rock solid Node.js/Express server using Mongoose to organize models and query the database</p>\n    </div>\n    <div class=\"col-md-4\">\n      <h3>Angular-CLI</h3>\n      <p>Angular-CLI to generate components, services and more. Local dev server and easy compilation</p>\n    </div>\n    <div class=\"col-md-4\">\n      <h3>JWT Tokens</h3>\n      <p>Full featured authentication using JSON web tokens. Login and store user data</p>\n    </div>\n  </div>","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n//import { FlashMessagesService } from 'angular2-flash-messages';\nimport  AuthService  from '../../services/auth.service'\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\nexport class ProfileComponent implements OnInit {\n\n user:Object;\n\n  constructor(\n   \n    private authService: AuthService,\n    private router: Router,\n  ) { }\n\n  ngOnInit(): void {\n\n    this.authService.getProfile().subscribe(profile => {\n      this.user = profile['user'];\n    },\n     err => {\n       console.log(err);\n       return false;\n     });\n  }\n\n}\n","\n<div *ngIf=\"user\">\n    <h2 class=\"page-header\">{{user.name}}</h2>\n    <ul class=\"list-group\">\n      <li class=\"list-group-item\">Username : {{user.username}}</li>\n      <li class=\"list-group-item\">Email : {{user.email}}</li>\n    </ul>\n  </div>\n  ","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","\n<h2 class=\"page-header\">Dashboard</h2>\n<p>Welcome to your Dashboard</p>\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'MEAN-APP';\n}\n","<app-navbar></app-navbar>\n<div class=\"container mt-2\">\n    <flash-messages></flash-messages>\n    <router-outlet></router-outlet>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { FlashMessagesService } from 'angular2-flash-messages';\nimport  AuthService  from '../../services/auth.service'\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  username:string;\n  password:string\n \n  constructor(\n  \n    private flashMessage: FlashMessagesService,\n    private authService: AuthService,\n    private router: Router,\n\n    \n  ) { }\n\n  ngOnInit(): void {}\n\n  onLoginSubmit(){\n\n    const user = {\n      username: this.username,\n      password: this.password\n    }\n    console.log(user);\n    this.authService.authenticateUser(user).subscribe(data => {\n      if(data['success']) {\n       this.authService.storeUserData(data['token'], data['user']);\n        this.flashMessage.show('You are now logged in', {cssClass: 'alert-success', timeout: 5000});\n        this.router.navigate(['dashboard']);\n      } else {\n        this.flashMessage.show(data['msg'], {cssClass: 'alert-danger', timeout: 5000});\n        this.router.navigate(['login']);\n      }\n  });\n\n  }\n\n}\n","<h2 class=\"page-header\" >Login</h2>\n<form class=\"form-signin\" (submit)=\"onLoginSubmit()\">\n        <div class=\"form-group\">\n          <label for=\"Username\">Username</label>\n          <input type=\"text\" class=\"form-control\" placeholder=\"Enter Username\" [(ngModel)]=\"username\" name=\"username\">\n        </div>\n        <div class=\"form-group\">\n        <label for=\"Password\">Password</label>\n        <input type=\"password\" class=\"form-control\" placeholder=\" Enter Password\" [(ngModel)]=\"password\" name=\"password\">\n        </div>\n        <div class=\"checkbox\">\n          <label>\n            <input type=\"checkbox\" value=\"remember-me\"> Remember me\n          </label>\n        </div>\n        <input class=\"btn btn-lg btn-primary\" type=\"submit\" value=\"Login\">\n</form>\n","import { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { ValidateService } from '../../services/validate.service';\nimport { FlashMessagesService } from 'angular2-flash-messages';\nimport  AuthService  from '../../services/auth.service'\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n  \n\n  name:string;\n  username:string;\n  email:string;\n  password:string;\n\n  constructor\n  (\n    private validateService : ValidateService,\n    private flashMessage: FlashMessagesService,\n    private authService: AuthService,\n    private router: Router,\n\n    ) \n    \n    { }\n\n  ngOnInit(): void {\n  }\n\n  onRegisterSubmit(){\n\n    const user = {\n      name: this.name,\n      email: this.email,\n      username: this.username,\n      password: this.password\n    }\n\n console.log('success');\n\n // @Required Fields\n\n     if(!this.validateService.validateRegister(user)) {\n      this.flashMessage.show('Please fill in all fields', {cssClass: 'alert-danger', timeout: 3000});\n      return false;\n    }\n      \n \n // @Required Email\n\n if(!this.validateService.validateEmail(user.email)) {\n  this.flashMessage.show('Please use a valid email', {cssClass: 'alert-danger', timeout: 3000});\n  return false;\n}\n\n// Register user\nthis.authService.registerUser(user).subscribe(data => {\n  if(data['success']) {\n    this.flashMessage.show('You are registered successfully and login now', {cssClass: 'alert-success', timeout: 3000});\n    this.router.navigate(['/login']);\n  } else {\n    this.flashMessage.show('Something went wrong', {cssClass: 'alert-danger', timeout: 3000});\n    this.router.navigate(['/register']);\n\n\n  }\n});\n\n  }\n \n  \n}\n","<div>\n    <h2 class=\"page-header\"><b>Registration</b></h2>\n    <form  (submit)=\"onRegisterSubmit()\">\n      <div class=\"form-group\">\n        <label for=\"name\">Name</label>\n        <input type=\"text\" [(ngModel)]=\"name\" name=\"name\" class=\"form-control\" id=\"name\" placeholder=\"Enter Name\">\n      </div>\n      <div class=\"form-group\">\n        <label for=\"username\">Username</label>\n        <input type=\"text\" [(ngModel)]=\"username\" name=\"username\" class=\"form-control\" id=\"username\" placeholder=\"Enter Username\">\n      </div>\n      <div class=\"form-group\">\n        <label for=\"email\">Email</label>\n        <input type=\"email\" [(ngModel)]=\"email\" name=\"email\" class=\"form-control\" id=\"email\" aria-describedby=\"emailHelp\" placeholder=\"Enter Email\">\n        <small id=\"emailHelp\" class=\"form-text text-muted\">We'll never share your email with anyone else.</small>\n      </div>\n      <div class=\"form-group\">\n        <label for=\"password\">Password</label>\n        <input type=\"password\" [(ngModel)]=\"password\" name=\"password\" class=\"form-control\" id=\"password\" placeholder=\" Enter Password\">\n      </div>\n      <input type=\"submit\" class=\"btn btn-primary\" value=\"Submit\">\n    </form>\n    </div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { ComponentsModule } from './components/components.module'\nimport { FormsModule , ReactiveFormsModule} from '@angular/forms';\nimport { FlashMessagesModule } from 'angular2-flash-messages';\nimport { HttpClientModule} from '@angular/common/http';\n//import AuthService from './services/auth.service';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    \n   \n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    ComponentsModule,\n    FormsModule,\n    ReactiveFormsModule,\n    FlashMessagesModule.forRoot(),\n    HttpClientModule,\n    \n\n\n  ],\n \n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ValidateService {\n\n  constructor() { }\n  validateRegister(user) {\n    if(user.name == undefined || user.email == undefined || user.username == undefined || user.password == undefined) {\n        return false;\n    } else {\n      return true;\n    }\n  }\n\n  validateEmail(email) {\n    const re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(email);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { FlashMessagesService } from 'angular2-flash-messages';\nimport  AuthService  from '../../services/auth.service'\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n\n  constructor(\n\n    private flashMessage: FlashMessagesService,\n    private authService: AuthService,\n    private router: Router,\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n  onLogoutClick(){\n    this.authService.logout();\n    this.flashMessage.show('You are logged out', {\n      cssClass: 'alert-success', timeout: 3000\n    });\n    this.router.navigate(['/login']);\n    return false;\n\n  }\n\n}\n","<nav class=\"navbar navbar-expand-md navbar-dark bg-primary\">\n    <div class=\"container-fluid\">\n     \n      <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarCollapse\" aria-controls=\"navbarCollapse\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n        <span class=\"navbar-toggler-icon\"></span>\n        <span class=\"icon-bar\"></span>\n        <span class=\"icon-bar\"></span>\n\n      </button>\n      <div class=\"collapse navbar-collapse\" id=\"navbarCollapse\">\n\n        <ul class=\"nav navbar-nav navbar-left\">\n          <li class=\"nav-item active\">\n            <a class=\"nav-link\" href=\"/\">Authentication-App</a>\n          </li>\n        </ul>\n        <ul class=\"navbar-nav mr-auto\">\n            <li class=\"nav-item\">\n              <a class=\"nav-link\" href=\"/\">Home <span></span></a>\n            </li>\n          </ul>\n        <ul class=\"navbar-nav ml-auto\">\n        \n          <li class=\"nav-item\">\n            <a class=\"nav-link active\" href='login'>Login</a>\n          </li>\n          <li class=\"nav-item\">\n            <a class=\"nav-link \" href='register'>Register</a>\n          </li>\n          <li class=\"nav-item\">\n            <a class=\"nav-link \"  (click)=\"onLogoutClick()\" href='/'>Logout</a>\n          </li>\n          <li class=\"nav-item\">\n            <a class=\"nav-link \"  href='profile'>Profile</a>\n          </li>\n          \n          \n      </ul>\n  \n      </div>\n    </div>\n  </nav>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RegisterComponent } from './register/register.component';\nimport { LoginComponent } from './login/login.component';\nimport { HomeComponent } from './home/home.component';\nimport { NavbarComponent } from './navbar/navbar.component';\nimport { ProfileComponent } from './profile/profile.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { FormsModule , ReactiveFormsModule} from '@angular/forms';\nimport {ValidateService } from '../services/validate.service';\nimport  AuthService  from '../services/auth.service'\n\n\n\n@NgModule({\n  declarations: [RegisterComponent, LoginComponent, HomeComponent, NavbarComponent, ProfileComponent, DashboardComponent],\n  imports: [\n    CommonModule,\n    FormsModule\n  ],\n  exports:[\n    RegisterComponent,\n    LoginComponent,\n     HomeComponent,\n    NavbarComponent, \n    ProfileComponent,\n    ReactiveFormsModule\n  ],\n  providers:[ValidateService ,AuthService]\n})\nexport class ComponentsModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient ,HttpHeaders ,HttpParams}   from '@angular/common/http'\nimport { Observable } from 'rxjs';\n// import { tokenNotExpired } from 'angular2-jwt';\n\n\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport default class AuthService {\n\n  authToken: any;\n  user: any;\n  results: any;\n\n  constructor(private httpclient: HttpClient) { }\n\n  \n  registerUser(user):Observable<any> {\n    let headers = new HttpHeaders();\n    headers.append('Content-Type', 'application/json');\n    return this.httpclient.post('http://localhost:5000/users/register', user, {headers: headers})\n  \n  \n  }\n\n  authenticateUser(user) {\n    let headers = new HttpHeaders();\n    headers.append('Content-Type', 'application/json');\n    return this.httpclient.post('http://localhost:5000/users/Authenticate', user, {headers: headers})\n   \n  }\n\n\n  storeUserData(token, user) {\n    localStorage.setItem('id_token', token);\n    localStorage.setItem('user', JSON.stringify(user));\n    this.authToken = token;\n    this.user = user;\n  }\n\n  logout() {\n    this.authToken = null;\n    this.user = null;\n    localStorage.clear();\n  }\n\n  getProfile() {\n    let headers = new HttpHeaders();\n    this.loadToken();\n    headers.append('Authorization', this.authToken);\n    headers.append('Content-Type', 'application/json');\n    return this.httpclient.get('http://localhost:5000/users/profile', {headers: headers})\n    \n  }\n\n  loadToken() {\n    const token = localStorage.getItem('id_token');\n    this.authToken = token;\n  }\n\n  loggedIn() {\n   // return tokenNotExpired('id_token');\n  }\n\n}\n\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { RegisterComponent } from './components/register/register.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { HomeComponent } from './components/home/home.component';\nimport { DashboardComponent } from './components/dashboard/dashboard.component';\nimport { ProfileComponent } from './components/profile/profile.component';\n\nconst routes: Routes = [\n\n\n  {path :'' ,component: HomeComponent},\n  {path :'register' ,component: RegisterComponent},\n  {path :'login' ,component: LoginComponent},\n  {path :'dashboard' ,component: DashboardComponent},\n  {path :'profile' ,component: ProfileComponent},\n  \n  \n\n\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}